const keywordInput = document.getElementById('keywordInput');
const addForm = document.getElementById('addForm');
const keywordList = document.getElementById('keywordList');
const sensitiveMode = document.getElementById('sensitiveMode');
const sponsoredMode = document.getElementById('sponsoredMode');

const SENSITIVE_WORDS = [
  'spoiler', 'violencia', 'sangre', 'muerte', 'asesinato', 'guerra', 'pol√≠tica', 'elecciones', 'abuso', 'terror', 'suicidio', 'accidente', 'desastre', 'tragedia', 'enfermedad', 'racismo', 'discriminaci√≥n', 'odio', 'ataque', 'crimen', 'delito', 'arma', 'armas', 'tiroteo', 'violaci√≥n', 'acoso', 'bullying', 'depresi√≥n', 'ansiedad', 'trauma', 'spoilers', 'final', 'plot twist', 'revelaci√≥n', 'matar', 'morir', 'herido', 'herida', 'sufrimiento', 'llorar', 'llanto', 'triste', 'tristeza', 'p√°nico', 'peligro', 'alerta', 'emergencia', 'cat√°strofe', 'enfrentamiento', 'conflicto', 'protesta', 'manifestaci√≥n', 'dictadura', 'corrupci√≥n', 'esc√°ndalo', 'controversia', 'cancelado', 'cancelaci√≥n', 'cancel culture', 'violento', 'violenta', 'sensible', 'delicado', 'sangriento', 'sangrienta', 'shock', 'impactante', 'impacto', 'susto', 'sustos', 'miedo', 'temor', 'terrorismo', 'terrorista', 'radical', 'extremista', 'extremismo', 'xenofobia', 'homofobia', 'transfobia', 'lgbt', 'lgbtq', 'homosexual', 'homosexualidad', 'transg√©nero', 'bisexual', 'pansexual', 'asexual', 'identidad', 'g√©nero', 'orientaci√≥n', 'sexual', 'sexo', 'sexualidad', 'pornograf√≠a', 'porno', 'er√≥tico', 'er√≥tica', 'desnudo', 'desnuda', 'desnudez', 'nude', 'nudes', 'naked', 'nsfw', '18+', 'adulto', 'adulta', 'adultos', 'incesto', 'pedofilia', 'pederasta', 'pederastia', 'zoofilia', 'bestialidad', 'bestialismo', 'necrofilia', 'canibalismo', 'gore', 'snuff', 'tortura', 'sadismo', 'masoquismo', 'bdsm', 'fetiche', 'fetichismo', 'parafilia', 'parafilias', 'tab√∫', 'tab√∫es', 'prohibido', 'prohibida', 'ilegal', 'ilegalidad', 'delincuencia', 'delincuente', 'criminal', 'criminalidad', 'asesino', 'asesina', 'homicidio', 'parricidio', 'infanticidio', 'feminicidio', 'genocidio', 'matanza', 'masacre', 'ejecuci√≥n', 'pena de muerte', 'pena capital', 'linchamiento', 'ahorcamiento', 'decapitaci√≥n', 'desmembramiento', 'descuartizamiento', 'desollamiento', 'empalamiento', 'lapidaci√≥n', 'fusilamiento', 'electrocuci√≥n', 'ahogamiento', 'envenenamiento', 'estrangulamiento', 'asfixia', 'aplastamiento', 'mutilaci√≥n', 'amputaci√≥n', 'castraci√≥n', 'circuncisi√≥n', 'ablaci√≥n', 'clitoridectom√≠a', 'infibulaci√≥n', 'mutilaci√≥n genital', 'mutilaci√≥n genital femenina', 'mutilaci√≥n genital masculina', 'mutilaci√≥n genital infantil', 'mutilaci√≥n genital intersexual', 'mutilaci√≥n genital transg√©nero', 'mutilaci√≥n genital no binaria', 'mutilaci√≥n genital queer', 'mutilaci√≥n genital lgbt', 'mutilaci√≥n genital lgbtq', 'mutilaci√≥n genital homosexual', 'mutilaci√≥n genital heterosexual', 'mutilaci√≥n genital bisexual', 'mutilaci√≥n genital pansexual', 'mutilaci√≥n genital asexual'
];

const translations = {
  es: {
    addKeyword: 'A√±adir palabra clave',
    sensitive: 'Modalidad sensible',
    sponsored: 'Ocultar patrocinados',
    coffeeMsg: '¬øEsta extensi√≥n te ha sido √∫til?',
    coffeeBtn: 'Inv√≠tame un caf√©',
    delete: 'Eliminar',
    dark: 'Modo oscuro',
    censorMode: 'Modo de censura:',
    tooltip: 'Filtra autom√°ticamente palabras relacionadas con contenido delicado, spoilers, violencia, pol√≠tica, etc.'
  },
  en: {
    addKeyword: 'Add keyword',
    sensitive: 'Sensitive mode',
    sponsored: 'Hide sponsored',
    coffeeMsg: 'Has this extension been useful?',
    coffeeBtn: 'Buy Me a Coffee',
    delete: 'Delete',
    dark: 'Dark mode',
    censorMode: 'Censor mode:',
    tooltip: 'Automatically filters words related to sensitive content, spoilers, violence, politics, etc.'
  },
  fr: {
    addKeyword: 'Ajouter un mot-cl√©',
    sensitive: 'Mode sensible',
    sponsored: 'Masquer les sponsoris√©s',
    coffeeMsg: 'Cette extension vous a √©t√© utile ?',
    coffeeBtn: 'Offre-moi un caf√©',
    delete: 'Supprimer',
    dark: 'Mode sombre',
    censorMode: 'Mode de censure :',
    tooltip: 'Filtre automatiquement les mots li√©s au contenu sensible, spoilers, violence, politique, etc.'
  },
  de: {
    addKeyword: 'Schl√ºsselwort hinzuf√ºgen',
    sensitive: 'Sensibler Modus',
    sponsored: 'Gesponserte ausblenden',
    coffeeMsg: 'War diese Erweiterung n√ºtzlich?',
    coffeeBtn: 'Kaffee spendieren',
    delete: 'L√∂schen',
    dark: 'Dunkler Modus',
    censorMode: 'Zensurmodus:',
    tooltip: 'Filtert automatisch W√∂rter zu sensiblen Themen, Spoilern, Gewalt, Politik usw.'
  },
  it: {
    addKeyword: 'Aggiungi parola chiave',
    sensitive: 'Modalit√† sensibile',
    sponsored: 'Nascondi sponsorizzati',
    coffeeMsg: 'Questa estensione ti √® stata utile?',
    coffeeBtn: 'Offrimi un caff√®',
    delete: 'Elimina',
    dark: 'Modalit√† scura',
    censorMode: 'Modalit√† censura:',
    tooltip: 'Filtra automaticamente parole su contenuti delicati, spoiler, violenza, politica, ecc.'
  },
  pt: {
    addKeyword: 'Adicionar palavra-chave',
    sensitive: 'Modo sens√≠vel',
    sponsored: 'Ocultar patrocinados',
    coffeeMsg: 'Esta extens√£o foi √∫til?',
    coffeeBtn: 'Me pague um caf√©',
    delete: 'Excluir',
    dark: 'Modo escuro',
    censorMode: 'Modo de censura:',
    tooltip: 'Filtra automaticamente palavras de conte√∫do sens√≠vel, spoilers, viol√™ncia, pol√≠tica, etc.'
  }
};

const sensitiveInfoTexts = {
  es: 'Filtra autom√°ticamente palabras relacionadas con contenido delicado, spoilers, violencia, pol√≠tica, etc.',
  en: 'Automatically filters words related to sensitive content, spoilers, violence, politics, etc.',
  fr: 'Filtre automatiquement les mots li√©s au contenu sensible, spoilers, violence, politique, etc.',
  de: 'Filtert automatisch W√∂rter zu sensiblen Themen, Spoilern, Gewalt, Politik usw.',
  it: 'Filtra automaticamente parole su contenuti delicati, spoiler, violenza, politica, ecc.',
  pt: 'Filtra automaticamente palavras de conte√∫do sens√≠vel, spoilers, viol√™ncia, pol√≠tica, etc.'
};

// Elimino toda la l√≥gica de sitios personalizados y solo dejo Twitter/X
const censorModeLabels = {
  es: ['Censurar palabra', 'Ocultar tweet completo'],
  en: ['Censor word', 'Hide tweet'],
  fr: ['Censurer le mot', 'Masquer le tweet'],
  de: ['Wort zensieren', 'Tweet ausblenden'],
  it: ['Censura parola', 'Nascondi tweet'],
  pt: ['Censurar palavra', 'Ocultar tweet']
};

let currentLang = 'es';
const langData = {
  es: { flag: 'üá™üá∏', code: 'ES' },
  en: { flag: 'üá¨üáß', code: 'EN' },
  fr: { flag: 'üá´üá∑', code: 'FR' },
  de: { flag: 'üá©üá™', code: 'DE' },
  it: { flag: 'üáÆüáπ', code: 'IT' },
  pt: { flag: 'üáµüáπ', code: 'PT' }
};

function setLanguage(lang) {
  currentLang = lang;
  const t = translations[lang] || translations['es'];
  document.getElementById('keywordInput').placeholder = t.addKeyword;
  document.getElementById('sensitiveLabel').textContent = t.sensitive;
  document.getElementById('sponsoredLabel').textContent = t.sponsored;
  document.getElementById('coffeeMsg').innerHTML = t.coffeeMsg + ' <span class="coffee-icon">‚òï</span>';
  document.getElementById('coffeeBtn').textContent = t.coffeeBtn;
  document.getElementById('darkModeBtn').title = t.dark;
  // Actualizo el selector de idioma visual
  document.getElementById('langFlag').textContent = langData[lang].flag;
  document.getElementById('langCode').textContent = langData[lang].code;
  // Traducir selector de modo de censura y forzar redibujado
  const censorModeSelect = document.getElementById('censorMode');
  const labels = censorModeLabels[lang] || censorModeLabels['es'];
  const currentValue = censorModeSelect.value;
  const newSelect = censorModeSelect.cloneNode(false);
  [0,1].forEach(i => {
    const opt = document.createElement('option');
    opt.value = i === 0 ? 'word' : 'element';
    opt.textContent = labels[i];
    newSelect.appendChild(opt);
  });
  newSelect.value = currentValue;
  censorModeSelect.parentNode.replaceChild(newSelect, censorModeSelect);
  newSelect.id = 'censorMode';
  newSelect.className = 'censor-mode-select';
  newSelect.onchange = censorModeSelect.onchange;
  document.querySelector('.censor-mode-label').textContent = t.censorMode;
  // Tooltip info modalidad sensible
  let infoIcon = document.getElementById('sensitiveInfo');
  if (infoIcon) {
    let tooltip = infoIcon.querySelector('.info-tooltip');
    if (!tooltip) {
      tooltip = document.createElement('span');
      tooltip.className = 'info-tooltip';
      infoIcon.appendChild(tooltip);
    }
    tooltip.textContent = t.tooltip;
  }
  document.querySelectorAll('.delete-btn').forEach(btn => btn.title = t.delete);
  document.querySelectorAll('.lang-flag').forEach(btn => {
    btn.classList.toggle('selected', btn.dataset.lang === lang);
  });
}

// Dropdown idioma
const langDropdown = document.getElementById('langDropdown');
const langToggleBtn = document.getElementById('langToggleBtn');
const langMenu = document.getElementById('langMenu');
langToggleBtn.onclick = function(e) {
  e.stopPropagation();
  langDropdown.classList.toggle('open');
};
document.querySelectorAll('.dropdown-item').forEach(btn => {
  btn.onclick = function() {
    const lang = this.dataset.lang;
    chrome.storage.local.set({ language: lang });
    setLanguage(lang);
    langDropdown.classList.remove('open');
  };
});
document.body.onclick = function() {
  langDropdown.classList.remove('open');
};

function loadLanguage() {
  chrome.storage.local.get(['language'], data => {
    const lang = data.language || 'es';
    setLanguage(lang);
  });
}

// Modo oscuro
const darkModeBtn = document.getElementById('darkModeBtn');
darkModeBtn.onclick = function() {
  const isDark = document.body.classList.toggle('dark');
  document.querySelector('.container').classList.toggle('dark', isDark);
  chrome.storage.local.set({ darkMode: isDark });
  darkModeBtn.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';
};
function loadDarkMode() {
  chrome.storage.local.get(['darkMode'], data => {
    if (data.darkMode) {
      document.body.classList.add('dark');
      document.querySelector('.container').classList.add('dark');
      darkModeBtn.textContent = '‚òÄÔ∏è';
    } else {
      document.body.classList.remove('dark');
      document.querySelector('.container').classList.remove('dark');
      darkModeBtn.textContent = 'üåô';
    }
  });
}

function renderKeywords(keywords) {
  keywordList.innerHTML = '';
  keywords.forEach((word, idx) => {
    const li = document.createElement('li');
    li.textContent = word;
    const btn = document.createElement('button');
    btn.textContent = '‚úï';
    btn.className = 'delete-btn';
    btn.title = translations[currentLang].delete;
    btn.onclick = () => removeKeyword(idx);
    li.appendChild(btn);
    keywordList.appendChild(li);
  });
}

function saveKeywords(keywords) {
  chrome.storage.local.set({ keywords });
}

function addKeyword(word) {
  word = word.trim();
  if (!word) return;
  chrome.storage.local.get(['keywords'], data => {
    let keywords = Array.isArray(data.keywords) ? data.keywords : [];
    if (!keywords.includes(word)) {
      keywords.push(word);
      saveKeywords(keywords);
      renderKeywords(keywords);
      keywordInput.value = '';
    }
  });
}

function removeKeyword(idx) {
  chrome.storage.local.get(['keywords'], data => {
    let keywords = Array.isArray(data.keywords) ? data.keywords : [];
    keywords.splice(idx, 1);
    saveKeywords(keywords);
    renderKeywords(keywords);
  });
}

addForm.onsubmit = e => {
  e.preventDefault();
  addKeyword(keywordInput.value);
};

sensitiveMode.onchange = () => {
  chrome.storage.local.set({ sensitiveMode: sensitiveMode.checked });
};

sponsoredMode.onchange = () => {
  chrome.storage.local.set({ sponsoredMode: sponsoredMode.checked });
};

// Guardar y cargar modo de censura
const censorModeSelect = document.getElementById('censorMode');
censorModeSelect.onchange = function() {
  chrome.storage.local.set({ censorMode: censorModeSelect.value });
};
function loadCensorMode() {
  chrome.storage.local.get(['censorMode'], data => {
    censorModeSelect.value = data.censorMode || 'word';
  });
}

// Inicializar
loadLanguage();
loadDarkMode();
loadCensorMode(); 